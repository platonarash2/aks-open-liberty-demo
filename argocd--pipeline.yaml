
name: Build sample Open Liberty app
    

# specific path build
trigger:
  branches:
    include:
    - master    
  paths:
    include:
    - open-liberty-on-aks/javaee-app-simple-cluster
    

pool:
  name: Azure Pipelines

steps:
- checkout: self
  persistCredentials: true

# Maven
# Build, test, and deploy with Apache Maven
- task: Maven@3
  displayName: Maven Build
  inputs:
    mavenPomFile: 'open-liberty-on-aks/javaee-app-simple-cluster/pom.xml' 
    goals: 'clean package' # Optional
    jdkVersionOption: 'default' # Optional. Options: default, 1.14, 1.13, 1.12, 1.11, 1.10, 1.9, 1.8, 1.7, 1.6
    #options: # Optional
    #publishJUnitResults: true 
    #testResultsFiles: '**/surefire-reports/TEST-*.xml' # Required when publishJUnitResults == True
    #testRunTitle: # Optional
    #allowBrokenSymlink: false # Optional. Has effect only when publishJUnitResults == True
    #codeCoverageToolOption: 'None' # Optional. Options: none, cobertura, jaCoCo. Enabling code coverage inserts the `clean` goal into the Maven goals list when Maven runs.
    #codeCoverageClassFilter: # Optional. Comma-separated list of filters to include or exclude classes from collecting code coverage. For example: +:com.*,+:org.*,-:my.app*.*
    #codeCoverageClassFilesDirectories: # Optional
    #codeCoverageSourceDirectories: # Optional
    #codeCoverageFailIfEmpty: false # Optional
    #javaHomeOption: 'JDKVersion' # Options: jDKVersion, path
    #jdkDirectory: # Required when javaHomeOption == Path
    #jdkArchitectureOption: 'x64' # Optional. Options: x86, x64
    #mavenVersionOption: 'Default' # Options: default, path
    #mavenDirectory: # Required when mavenVersionOption == Path
    #mavenSetM2Home: false # Required when mavenVersionOption == Path
    #mavenOptions: '-Xmx1024m' # Optional
    #mavenAuthenticateFeed: false 
    #effectivePomSkip: false 
    #sonarQubeRunAnalysis: false 
    #sqMavenPluginVersionChoice: 'latest' # Required when sonarQubeRunAnalysis == True# Options: latest, pom
    #checkStyleRunAnalysis: false # Optional
    #pmdRunAnalysis: false # Optional
    #findBugsRunAnalysis: false # Optional

- task: AzureCLI@2
  displayName: Build Image
  inputs:
    azureSubscription: 'java-demo - Azure'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd ./open-liberty-on-aks/javaee-app-simple-cluster
      artifactId=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.artifactId}' --non-recursive exec:exec)
      version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)   
      cd target    
      az acr build -t ${artifactId}:${version} -r javademoacr . 

- script: |
   git config --global user.email pipeline@demo.com & git config --global user.name "Pipeline"
  workingDirectory: $(System.DefaultWorkingDirectory)
  displayName: Setup Git client

- script: |
   git checkout -b master
   cp ./open-liberty-on-aks/javaee-app-simple-cluster/target/openlibertyapplication.yaml ./open-liberty-on-aks/javaee-app-simple-cluster/src/main/aks/argocd/openlibertyapplication.yaml    
   git add -A
   git commit -m "deployment $(Build.BuildNumber)"
   git push --set-upstream origin master 
  displayName: Updating manifest and Trigger ArgoCD
  workingDirectory: $(System.DefaultWorkingDirectory)

      